@page "/notes"
@rendermode InteractiveServer //braucht es für eine interaktive seite

<PageTitle>Notes</PageTitle>

<h1>Notizen</h1>

<h2>variable text: @exampleNote</h2>
<button class="btn btn-primary change-note-btn" @onclick="changeText">Ändere den Text oben!</button>

<button class="btn btn-primary change-note-btn" @onclick="@(()=>{
    if (exampleNote == "Beispiel Notiz")
        {
            exampleNote = "Neue Beispiel Notiz!";
        }
        else
        {
            exampleNote = "Beispiel Notiz";
        }
        })">Ändere den Text oben!</button>


@if (exampleNote == "Beispiel Notiz")
{
    <p>Standard Notiz wird angezeigt</p>
}
else
{
    <p>Standard Notiz wird nicht angezeigt</p>
}

<input @bind="@newNoteInput">
<button @onclick="addNewNote">Neue Notiz hinzufügen</button>
<button @onclick="deleteAllNotes">Alle Notizen löschen</button>

@for (int i = 0; i < 10; i++)
{
    <p>value of i: @i</p>
}

@{
    int index = 0;
}
@foreach (var note in notes)
{
    <div id="@("ie"+@index)" @ref="NoteContainerRef" @onmouseenter="showPopUp" @onmouseleave="hidePopUp"
        class="note-container">
        @if (showPopup)
        {
            <span class="note-popup" @onclick="()=>deleteNote(note)">Delete Note</span>
        }
        <p>@((MarkupString)note)</p>
    </div>
    index++;
}


@code {
    ElementReference NoteContainerRef;
    private bool showPopup = false;

    private string newNoteInput = "";
    private List<string> notes = [];


    private void showPopUp()
    {

    }

    private void hidePopUp()
    {

    }
    protected override void OnInitialized()
    {
        notes = new List<string>{
"<b>erste notiz</b>",
"<i>zweite notiz</i>",
"dritte notiz",
"vierte notiz",
"fünfte notiz",
"sechste notiz",
"siebte notiz"};
    }
    private string exampleNote = "Beispiel Notiz";
    private void changeText()
    {

        if (exampleNote == "Beispiel Notiz")
        {
            exampleNote = "Neue Beispiel Notiz!";
        }
        else
        {
            exampleNote = "Beispiel Notiz";
        }

    }

    private void addNewNote()
    {
        notes.Add(newNoteInput);
        newNoteInput = "";
    }

    private void deleteAllNotes()
    {
        notes = [];
    }


    private void deleteNote(string note)
    {
        notes.Remove(note);
    }
}